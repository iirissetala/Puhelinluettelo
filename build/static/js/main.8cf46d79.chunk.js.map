{"version":3,"sources":["services/phonebookService.js","Notification.js","FormNewPerson.js","Person.js","Phonebook.js","App.js","index.js"],"names":["url","axios","get","then","response","data","newPerson","post","catch","error","console","log","id","delete","changedPerson","put","Notification","errorMessage","message","show","className","FormNewPerson","people","setPeople","setShow","useState","newName","setNewName","newNumber","setNewNumber","setMessage","setErrorMessage","value","onChange","e","target","type","onClick","preventDefault","name","number","some","person","window","confirm","find","p","Service","returnedPerson","map","setTimeout","filter","addedPerson","concat","errorData","JSON","stringify","Person","deletePerson","Phonebook","showAll","setShowAll","searched","setSearced","namesToShow","toLowerCase","includes","key","App","useEffect","Services","receivedPeople","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cf46d79.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(url)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst createNew = (newPerson) => {\r\n  const request = axios.post(`${url}`, newPerson)\r\n    return request\r\n        .then(response => {\r\n            return (response.data)\r\n        })\r\n        .catch (error => {\r\n            console.log(error.response.data)\r\n            throw error\r\n        })\r\n    \r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${url}/${id}`)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst updateNumber = (id, changedPerson) => {\r\n    const request = axios.put(`${url}/${id}`, changedPerson)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {getAll, createNew, deletePerson, updateNumber}","import React from 'react'\r\n\r\nconst Notification = ({errorMessage, message, show}) => {\r\n\r\n    if (message === '' && errorMessage === '') {\r\n        return null\r\n    }\r\n    if (errorMessage !== '')\r\n        return (\r\n            <div>\r\n                {show && <div className='errormessage'> {errorMessage} </div>}\r\n            </div>\r\n    )\r\n    if (message !== ''){\r\n        return (\r\n            <div>\r\n                {show && <div className='message'> {message} </div>}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Notification","import React, {useState} from 'react'\r\nimport Service from './services/phonebookService'\r\nimport Notification from './Notification'\r\n\r\n\r\nconst FormNewPerson = ({people, setPeople, show, setShow}) => {\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ message, setMessage ] = useState('')\r\n    const [ errorMessage, setErrorMessage ] = useState('')\r\n    \r\n\r\n    const handleNameChange = (e) => setNewName(e.target.value)\r\n    const handleNumberChange = (e) => setNewNumber(e.target.value)\r\n\r\n    const addName = (e) => {\r\n        e.preventDefault()\r\n        const newPerson = {name: newName, number: newNumber}\r\n        if (people.some(person => person.name === newName)){\r\n            if(window.confirm(`${newName} is already in the phonebook, replace existing number?`)){\r\n                const person = people.find(p => p.name === newName)\r\n                const changedPerson = {...person, number: newNumber }\r\n                Service\r\n                    .updateNumber(person.id, changedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPeople(people.map(p => p.name !== newName ? p : returnedPerson))\r\n                        console.log(changedPerson, returnedPerson)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('ilmeni virhe:', error.message)\r\n                        setErrorMessage(`${newName} was already deleted from server`, error.message)\r\n                        setShow(true)\r\n                        setTimeout(() => {\r\n                            setErrorMessage('')\r\n                            setShow(false)\r\n                        }, 3000)\r\n                        setPeople(people.filter(p => p.name !== newName))\r\n                    })       \r\n            }\r\n            setNewName('')\r\n            setNewNumber('')\r\n        } else {\r\n            Service\r\n                .createNew(newPerson)\r\n                .then(addedPerson => {\r\n                    setPeople(people.concat(addedPerson))\r\n                    setMessage(`Added: ${newName}`)\r\n                    setShow(true)\r\n                    setTimeout(() => {\r\n                        setMessage('')\r\n                        setShow(false)\r\n                    }, 3000)\r\n                })\r\n                .catch(error => {\r\n                    console.log('ilmeni virhe:', error.message)\r\n                    let errorData = JSON.stringify(error.response.data)\r\n                    setErrorMessage(errorData)\r\n                        setShow(true)\r\n                        setTimeout(() => {\r\n                            setErrorMessage('')\r\n                            setShow(false)\r\n                        }, 3000)\r\n                })\r\n                setNewName('')\r\n                setNewNumber('')\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div>name: <input value={newName} onChange={handleNameChange}/></div>\r\n                <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n                <div><button type=\"submit\" onClick={addName}>add</button></div>\r\n                <Notification message={message} errorMessage={errorMessage} show={show} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormNewPerson","import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    const handleDelete = () => {\r\n        if (window.confirm(`Delete ${person.name} ?`)){\r\n            deletePerson()\r\n        }\r\n    }\r\n    return(\r\n        <p>{person.name} {person.number} <button onClick={handleDelete}>delete</button></p>\r\n    )\r\n}\r\n\r\nexport default Person","import React, {useState} from 'react'\r\nimport Person from './Person'\r\nimport Service from './services/phonebookService'\r\n\r\nconst Phonebook = ({people, setPeople}) => {\r\n    const [ showAll, setShowAll ] = useState(true)\r\n    const [ searched, setSearced ] = useState('')\r\n  \r\n    \r\n    const namesToShow = showAll\r\n        ? people\r\n        : people.filter(p => p.name.toLowerCase().includes(searched.toLowerCase()))\r\n\r\n    const addedPeople = () => namesToShow.map(person =>\r\n        <Person\r\n            key={person.name}\r\n            person={person}\r\n            deletePerson={() => deletePerson(person.id)}\r\n            />)\r\n\r\n    const deletePerson = id => {\r\n        Service\r\n            .deletePerson(id)\r\n            .then(\r\n                setPeople(people.filter(p => p.id !== id))\r\n            )\r\n            \r\n    }\r\n    \r\n    const handleSearch = (e) => {\r\n        setSearced(e.target.value)\r\n        setShowAll(false)\r\n    } \r\n\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n            filter shown names by <input value={searched} onChange={handleSearch}></input>\r\n            </div>\r\n            <div>{addedPeople()}</div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Phonebook","import React, {useState, useEffect} from 'react'\r\nimport FormNewPerson from './FormNewPerson'\r\nimport Phonebook from './Phonebook'\r\nimport Services from './services/phonebookService'\r\n\r\n\r\nconst App = () => {\r\n    const [ people, setPeople] = useState([]) \r\n    const [ show, setShow ] = useState(false)\r\n\r\n    useEffect(() => {\r\n      Services\r\n        .getAll()\r\n        .then(receivedPeople => {\r\n          setPeople(receivedPeople)\r\n          console.log('data vastaanotettu ja puhelinluettelo alustettu')\r\n        })\r\n    }, [])\r\n    console.log('palautui', people.length, 'henkilöä')\r\n\r\n    return (\r\n      <div>\r\n        <h2>Phonebook</h2>\r\n        <h3>Add new name</h3>\r\n        <FormNewPerson people={people} setPeople={setPeople} show={show} setShow={setShow} />\r\n        <h3>Numbers</h3>\r\n        <Phonebook people={people} setPeople={setPeople} show={show} setShow={setShow} />   \r\n      </div>\r\n    )\r\n  \r\n  }\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}